services:
  airflow-db:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - airflow_net

  redis:
    image: redis:6-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - airflow_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - airflow_net

  hive-metastore-db:
    image: postgres:13
    container_name: hive-metastore-db
    environment:
      - POSTGRES_USER=hive
      - POSTGRES_PASSWORD=hive
      - POSTGRES_DB=metastore
    volumes:
      - hive_metastore_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hive -d metastore"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - airflow_net

  hive-metastore:
    build:
      context: .
      dockerfile: ./docker/hive-metastore/Dockerfile
    container_name: hive-metastore
    ports:
      - "9083:9083"
    environment:
      HIVE_METASTORE_DB_HOST: hive-metastore-db
      HIVE_METASTORE_DB_PORT: 5432
      HIVE_METASTORE_DB_USER: hive
      HIVE_METASTORE_DB_PASSWORD: hive
      HIVE_METASTORE_DB_NAME: metastore
    volumes:
      - /root/spark_minio_superset_airflow_project/docker/hive-metastore/start_metastore.sh:/usr/local/bin/start_metastore.sh
    entrypoint: ["/bin/bash", "/usr/local/bin/start_metastore.sh"]
    depends_on:
      hive-metastore-db:
        condition: service_healthy
    networks:
      - airflow_net
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9083"]
      interval: 10s
      timeout: 5s
      retries: 5


  trino:
    image: trinodb/trino:473
    container_name: trino
    ports:
      - "8080:8080"
    volumes:
      - ./docker/trino/plugin/hive:/usr/lib/trino/plugin/hive
      - ./docker/hive-metastore/hadoop-lib:/usr/lib/trino/hadoop-lib
      - ./docker/trino/catalog:/etc/trino/catalog
      - ./docker/trino/etc:/etc/trino
      - ./docker/trino/hadoop-lib/core-site.xml:/etc/hadoop/conf/core-site.xml
      - ./docker/hive-metastore/hive-site.xml:/etc/hive/conf/hive-site.xml
      - ./docker/trino/plugin/delta:/usr/lib/trino/plugin/delta-lake

    environment:
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
    depends_on:
      hive-metastore:
        condition: service_healthy
    networks:
      - airflow_net

  airflow-init:
    build:
      context: .
      dockerfile: ./docker/airflow/Dockerfile
    user: airflow # Run as airflow user at runtime
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@airflow-db:5432/airflow
      - MINIO_HOST=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - _JAVA_OPTIONS=-Xmx2g -Xms512m 
    depends_on:
      airflow-db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      trino:
        condition: service_healthy
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./crawler:/opt/airflow/crawler
      - ./data:/opt/airflow/data
     
    command: > 
      bash -c "
        airflow db migrate &&
        airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin
      "
    networks:
      - airflow_net

  superset:
    image: apache/superset:3.0.1
    container_name: superset
    ports:
      - "8085:8088"
    environment:
      - SUPERSET_SECRET_KEY=admin
      - ADMIN_USERNAME=admin
      - ADMIN_FIRSTNAME=Superset
      - ADMIN_LASTNAME=Admin
      - ADMIN_EMAIL=admin@example.com
      - ADMIN_PASSWORD=admin
      - FLASK_APP=superset
      - SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://superset:superset@superset-db:5432/superset
    depends_on:
      airflow-db:
        condition: service_healthy
      superset-db:
        condition: service_healthy
    volumes:
      - ./docker/superset:/app/superset_config
      - superset_db_data:/var/lib/postgresql/data
    command: >
      bash -c "
        pip install trino &&
        superset db upgrade &&
        superset fab create-admin --username admin --firstname Superset --lastname Admin --email admin@example.com --password admin || true &&
        superset init &&
        superset run -h 0.0.0.0 -p 8088 --with-threads --reload --debugger
      "
    networks:
      - airflow_net

  airflow-webserver:
    build:
      context: .
      dockerfile: ./docker/airflow/Dockerfile
    user: airflow
    ports:
      - "8081:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      - AIRFLOW__CORE__FERNET_KEY=gJcA1TljZDCZYOXhTFBNRoBZRDusH5m3EZEqygChqDo=
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@airflow-db:5432/airflow
      - MINIO_HOST=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - _JAVA_OPTIONS=-Xmx2g -Xms512m
      - AIRFLOW__WEBSERVER__BASE_URL=http://localhost:8080
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./crawler:/opt/airflow/crawler
      - ./data:/opt/airflow/data
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      trino:
        condition: service_healthy
    command: webserver 
    networks:
      - airflow_net
  airflow-worker:
    build:
      context: .
      dockerfile: ./docker/airflow/Dockerfile
    user: airflow
    environment:
      - AIRFLOW_UID=0
      - AIRFLOW_GID=0
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      - AIRFLOW__CORE__FERNET_KEY=gJcA1TljZDCZYOXhTFBNRoBZRDusH5m3EZEqygChqDo=
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@airflow-db:5432/airflow
      - MINIO_HOST=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - _JAVA_OPTIONS=-Xmx2g -Xms512m
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./crawler:/opt/airflow/crawler
      - ./data:/opt/airflow/data
    depends_on:
      airflow-scheduler:
        condition: service_started
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      trino:
        condition: service_healthy
    command: celery worker
    networks:
      - airflow_net

  airflow-scheduler:
    build:
      context: .
      dockerfile: ./docker/airflow/Dockerfile
    user: airflow
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      - AIRFLOW__CORE__FERNET_KEY=gJcA1TljZDCZYOXhTFBNRoBZRDusH5m3EZEqygChqDo=
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@airflow-db:5432/airflow
      - MINIO_HOST=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - _JAVA_OPTIONS=-Xmx2g -Xms512m
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./crawler:/opt/airflow/crawler
      - ./data:/opt/airflow/data
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      trino:
        condition: service_healthy
    command: scheduler
    networks:
      - airflow_net
  superset-db:
    image: postgres:13
    container_name: superset_db
    environment:
      - POSTGRES_USER=superset
      - POSTGRES_PASSWORD=superset
      - POSTGRES_DB=superset
    volumes:
      - superset_db_data:/var/lib/postgresql/data
    networks:
      - airflow_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U superset -d superset"]
      interval: 5s
      timeout: 5s
      retries: 5


networks:
  airflow_net:
    driver: bridge

volumes:
  minio_data:
  mariadb_data:
  hive_metastore_data:
  pg_data:
  redis_data:
  superset_db_data:
  

